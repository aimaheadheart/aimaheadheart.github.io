[
  
  {
    "title": "Awesome Fairness in AI",
    "url": "/posts/Awesome-Fairness-in-AI/",
    "categories": "Blogging, Papers",
    "tags": "papers",
    "date": "2023-11-16 11:10:00 -0600",
    





    
    "snippet": "A curated list of awesome Fairness in AI resources.What is Fairness in AI?AI algorithms are increasingly being used in high-stake decision making applications that affect individual lives. However,...",
    "content": "A curated list of awesome Fairness in AI resources.What is Fairness in AI?AI algorithms are increasingly being used in high-stake decision making applications that affect individual lives. However, AI might exhibit algorithmic discrimination behaviors with respect to protected groups, potentially posing negative impacts on individuals and society.Fairness in AI (FAI) aims to build fair and unbiased AI/machine learning systems, that ensure the benefits are broadly available across all segments of society. Specific topics include but are not limited to: theoretical understanding of algorithmic bias, defining measurements of fairness, detection of adverse biases, and developing mitigation strategies.Table of Contents  Review and General Papers  Measurements of Fairness  Demonstration of Bias Phemomenon in Various Applications          Bias in Machine Learning Models      Bias in Representations        Mitigation of Unfairness          Mitigation of Machine Learning Models                  Adversarial Learning          Calibration          Incorporating Priors into Feature Attribution          Data Collection          Other Mitigation Methods                    Mitigation of Representations        Fairness Packages and Frameworks  Conferences  Other Fairness Relevant Interpretability ResourcesReview and General Papers  Fairness in Deep Learning: A Computational Perspective  The Measure and Mismeasure of Fairness: A Critical Review of Fair Machine Learning  Fairness and machine learning  A Survey on Bias and Fairness in Machine Learning  The Frontiers of Fairness in Machine Learning  Ensuring fairness in machine learning to advance health equity  Mitigating Gender Bias in Natural Language Processing: Literature Review  Fairness in Recommender Systems  Implementations in Machine Ethics: A SurveyMeasurements of Fairness  On Formalizing Fairness in Prediction with Machine Learning  Equality of Opportunity in Supervised Learning  Certifying and removing disparate impact  Does mitigating ML’s impact disparity require treatment disparity?  Putting Fairness Principles into Practice: Challenges, Metrics, and Improvements  Beyond Parity: Fairness Objectives for Collaborative Filtering  50 Years of Test (Un)fairness: Lessons for Machine Learning  Fairness Definitions Explained  Algorithmic Fairness  Bias in data‐driven artificial intelligence systems—An introductory survey  Fairness is not Static: Deeper Understanding of Long Term Fairness via Simulation Studies  Delayed Impact of Fair Machine LearningDemonstration of Bias Phemomenon in Various ApplicationsBias in Machine Learning Models  Gender Shades: Intersectional Accuracy Disparities in Commercial Gender Classification  Deep Learning for Face Recognition: Pride or Prejudiced?  Examining Gender and Race Bias in Two Hundred Sentiment Analysis Systems  Demographic Dialectal Variation in Social Media: A Case Study of African-American English  Feature-Wise Bias Amplification  ConvNets and ImageNet Beyond Accuracy: Understanding Mistakes and Uncovering BiasesBias in Representations  Man is to Computer Programmer as Woman is to Homemaker? Debiasing Word Embeddings  Gender Bias in Contextualized Word Embeddings  Assessing Social and Intersectional Biases in Contextualized Word RepresentationsMitigation of UnfairnessMitigation of Machine Learning Models  Adversarial Learning          Data Decisions and Theoretical Implications when Adversarially Learning Fair Representations      Achieving Fairness through Adversarial Learning: an Application to Recidivism Prediction      Balanced Datasets Are Not Enough: Estimating and Mitigating Gender Bias in Deep Image Representations      Mitigating Unwanted Biases with Adversarial Learning      Adversarial Removal of Demographic Attributes from Text Data      Compositional Fairness Constraints for Graph Embeddings        Calibration          Men Also Like Shopping: Reducing Gender Bias Amplification using Corpus-level Constraints      Equality of Opportunity in Supervised Learning        Incorporating Priors into Feature Attribution          Mitigating Gender Bias in Captioning Systems      Incorporating priors with feature attribution on text classification      Women Also Snowboard: Overcoming Bias in Captioning Models      Learning Credible Deep Neural Networks with Rationale Regularization        Data Collection          Why Is My Classifier Discriminatory?      Incorporating Dialectal Variability for Socially Equitable Language Identification      REPAIR: Removing Representation Bias by Dataset Resampling        Other Mitigation Methods          Mitigating Bias in Gender, Age and Ethnicity Classification: a Multi-Task Convolution Neural Network Approach      InclusiveFaceNet: Improving Face Attribute Detection with Race and Gender Diversity      Reducing Gender Bias in Abusive Language Detection      Fairness-aware Learning through Regularization Approach      Fairness Constraints: Mechanisms for Fair Classification      Penalizing Unfairness in Binary Classification      Fairness Constraints:A Flexible Approach for Fair Classification      A General Framework for Fair Regression      Fair Regression: Quantitative Definitions and Reduction-based Algorithms      Mitigation of Representations  Man is to Computer Programmer as Woman is to Homemaker? Debiasing Word Embeddings  Learning Gender-Neutral Word Embeddings  Flexibly Fair Representation Learning by Disentanglement  Turning a Blind Eye: Explicit Removal of Biases and Variation from Deep Neural Network EmbeddingsFairness Packages and Frameworks  AI Fairness 360  fairlearn: Fairness in machine learning mitigation algorithms  algofairness          fairness: Benchmarking of fairness aware machine learning algorithms        FairSight: Visual Analytics for Fairness in Decision Making  GD-IQ: Spellcheck for Bias (code not available)  aequitas: Bias and Fairness Audit Toolkit  CERTIFAI: A Common Framework to Provide Explanations and Analyse the Fairness and Robustness of Black-box Models  ML-fairness-gym: Google’s implementation based on OpenAI’s Gym  fairness-indicators: Tensorflow’s Fairness Evaluation and Visualization Toolkit  scikit-fairness  Mitigating Gender Bias In Captioning SystemConferences  FAT-: ACM Conference on Fairness, Accountability, and Transparency  FATML: Fairness, Accountability, and Transparency in Machine Learning Workshop  AIES: AAAI/ACM Conference on AI, Ethics, and SocietyOther Fairness Relevant Interpretability Resources  Awesome machine learning interpretability resources  The Mythos of Model Interpretability  Towards A Rigorous Science of Interpretable Machine Learning  Techniques for Interpretable Machine Learning  Methods for Interpreting and Understanding Deep Neural Networks"
  },
  
  {
    "title": "Fairly Predicting Graft Failure in Liver Transplant for Organ Assigning",
    "url": "/posts/paper1/",
    "categories": "Blogging, Papers",
    "tags": "papers",
    "date": "2023-11-16 11:00:00 -0600",
    





    
    "snippet": "This work proposes a fair machine learning framework targeting graft failure prediction in liver transplant by combining the advantages of tree models and neural networks and a two-step debiasing m...",
    "content": "This work proposes a fair machine learning framework targeting graft failure prediction in liver transplant by combining the advantages of tree models and neural networks and a two-step debiasing method is tailored for this framework to enhance fairness.Information  Authors: Sirui Ding, Ruixiang Tang, Daochen Zha, Na Zou, Kai Zhang, Xiaoqian Jiang, Xia Hu  AMIA Symposium 2022 Best Student Paper Finalist  Access PaperAbstractLiver transplant is an essential therapy performed for severe liver diseases. The fact of scarce liver resources makes the organ assigning crucial. Model for End-stage Liver Disease (MELD) score is a widely adopted criterion when making organ distribution decisions. However, it ignores post-transplant outcomes and organ/donor features. These limitations motivate the emergence of machine learning (ML) models. Unfortunately, ML models could be unfair and trigger bias against certain groups of people. To tackle this problem, this work proposes a fair machine learning framework targeting graft failure prediction in liver transplant. Specifically, knowledge distillation is employed to handle dense and sparse features by combining the advantages of tree models and neural networks. A two-step debiasing method is tailored for this framework to enhance fairness. Experiments are conducted to analyze unfairness issues in existing models and demonstrate the superiority of our method in both prediction and fairness performance."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2023-11-13 14:00:00 -0600",
    





    
    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH...",
    "content": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.HeadingsH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2023-11-13 12:00:00 -0600",
    





    
    "snippet": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and P...",
    "content": "This tutorial will guide you how to write a post in the Chirpy template, and it’s worth reading even if you’ve used Jekyll before, as many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---After enabling the mathematical feature, you can add math equations with the following syntax:  Block math should be added with $$ math $$ with mandatory blank lines before and after $$  Inline math (in lines) should be added with $$ math $$ without any blank line before or after $$  Inline math (in lists) should be added with \\$$ math $$&lt;!-- Block math, keep all blank lines --&gt;$$LaTeX_math_expression$$&lt;!-- Inline math in lines, NO blank lines --&gt;\"Lorem ipsum dolor sit amet, $$ LaTeX_math_expression $$ consectetur adipiscing elit.\"&lt;!-- Inline math in lists, escape the first `$` --&gt;1. \\$$ LaTeX_math_expression $$2. \\$$ LaTeX_math_expression $$3. \\$$ LaTeX_math_expression $$MermaidMermaid is a great diagram generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image, then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image.![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }  For an SVG, you have to at least specify its width, otherwise it won’t be rendered.Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      Dark/Light modeYou can make images follow theme preferences in dark/light mode. This requires you to prepare two images, one for dark mode and one for light mode, and then assign them a specific class (dark or light):![Light mode only](/path/to/light-mode.png){: .light }![Dark mode only](/path/to/dark-mode.png){: .dark }ShadowThe screenshots of the program window can be considered to show the shadow effect:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image at the top of the post, please provide an image with a resolution of 1200 x 630. Please note that if the image aspect ratio does not meet 1.91 : 1, the image will be scaled and cropped.Knowing these prerequisites, you can start setting the image’s attribute:---image:  path: /path/to/image  alt: image alternative text---Note that the img_path can also be passed to the preview image, that is, when it has been set, the  attribute path only needs the image file name.For simple use, you can also just use image to define the path.---image: /path/to/image---LQIPFor preview images:---image:  lqip: /path/to/lqip-file # or base64 URI---  You can observe LQIP in the preview image of post Text and Typography.For normal images:![Image description](/path/to/image){: lqip=\"/path/to/lqip-file\" }Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.VideosYou can embed a video with the following syntax:{% include embed/{Platform}.html id='{ID}' %}Where Platform is the lowercase of the platform name, and ID is the video ID.The following table shows how to get the two parameters we need in a given video URL, and you can also know the currently supported video platforms.            Video URL      Platform      ID                  https://www.youtube.com/watch?v=H-B46URT4mg      youtube      H-B46URT4mg              https://www.twitch.tv/videos/1634779211      twitch      1634779211      Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  }
  
]

